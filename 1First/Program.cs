// Почувствуй себя интерном

//  0. Вывести квадрат числа
    // int Square (int q) //указываем тип переменных, название метода, аргумент
    // {
    //     return q*q; //вывести квадрат
    // }
    // int res = Square(3);  //вводим в ручную число (в скобках)
    // Console.WriteLine (res);  //вывод на печать в терминал



//  1. По двум заданным числам проверять является ли первое квадратом второго
    // bool Square (int x, int y)  //тип логический, имя, аргументы
    // {
    //     return x == y*y;  //проверяет - правда ли равенство
    // }
    // bool res = Square (9,3);  //Вызов метода [первый вариант был таким: Console.WriteLine (Square (9,3))]
    // Console.WriteLine (res);  //печать



// //  2. Даны два числа. Показать большее и меньшее число
    
    // Первый вариант решения:
    // void comparison (int a, int b)  //метод void, имя, тип и имя аргументов
    // {
    //     // if (a>b) Console.WriteLine("Число a больше b"); //если да, выводим надпись
    //     // else Console.WriteLine("Число b больше a");  //если нет, выводим надпись
    //     if (a>b) Console.WriteLine($"Число {a} больше, чем {b}");  //а тут в ответ попадают введенные числа
    //     else Console.WriteLine($"Число {b} больше, чем {a}");   //а тут в ответ попадают введенные числа
    // }
    // comparison (19,7);  //вызов метода и ввод чисел в ручную

//!       // //Второй вариант (ПОКА НЕ ПОЛУЧИЛОСЬ):
        // bool comparison2 (int a, int b)
        // {
        //     // if (a > b) return a;
        //     // else return b;
        //     return a>b;
        // }
        // bool res = comparison2(7,7);
        // if (res == true) Console.WriteLine($"Число {a} больше, чем {b}");
        // else Console.WriteLine ($ "Число {b} больше, чем {a}");



// //  3. По заданному номеру дня недели вывести его название
    // Допущение: 1=понедельник, 2=вторник и т.д.
    // void week (int a)  
    //     {
    //         string [] array = {"Monday", "Tuesday",  //Задал массив
    //         "Wednesday", "Thursday", "Friday", 
    //         "Saturday", "Sunday"};
    //         Console.WriteLine(array[a-1]);  //печать указанного элемента массива -1 (убираем 0)
    //     }
    // week (3);  //вызов void метода

        // 3 задача с практикума (РЕШЕНИЕ С ВЫВОДОМ ПЕЧАТИ ИЗ ТЕЛА МЕТОДА)
        // string WeekDay(int current)  // обычный метод с типом "строка"
        // {
        //     string[] week = {"Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс"};  //Массив
        //     return week[current-1];  // возврат заданного элемента массива -1
        // }
        // Console.WriteLine("Сегодня " + WeekDay(3));  //печать названия дня недели



//  4. Найти максимальное из трех чисел
// Алгоритм: задать 3 числа > считаем, что 1 чило макс >
// > сравниваем первое со вторым > результат сравниваем с третьим
// > вывод результата в терминал
    // int Max (int a, int b, int c) //метод int с тремя аргументами
    // {
    //     int max = a;  //считаем, что "a" максимальное число (присваеваем значение)
    //     if (b > max) max = b;  //если "b" > max (то есть "a") считаем, что "b" максимальное число
    //     if (c > max) max = c;  //если "c" > max (то есть "b") считаем, что "c" максимальное число
    //     return max;  //возврат максимального числа
    // }
    // Console.WriteLine(Max (15,12,9));  //печать результата метода



//  5. Написать программу вычисления значения функции y = f(a)
    //Алгоритм: 1. Что за функция? Пусть будет синус.
    // 2.Вводим метод и переменную. 3.вводим функцию
    // 4. печать результата в терминале
        // double f (double x)
        // {
        //     double y = Math.Sin (x);
        //     return y;
        // }
        // Console.WriteLine(f(3));



//  6. Выяснить является ли число чётным
    //Решение задачи простейшим методом
    // int z = 7;  //ввод числа (в ручную)
    // if (z % 2 == 0) Console.WriteLine("Число четное"); //если остаток при делении на 2 равен нулю - печать что число четное
    // else Console.WriteLine("Число нечетное");  //если нет - нечетное

        //Решение через метод
        // void Even (int z)  //метод void
        // {
        //     if (z % 2 == 0) Console.WriteLine("Число четное");  //если остаток от деления на 2 равен нулю, то...
        //     else Console.WriteLine("Число нечетное");  //в противном случае...
        // }
        // Even (2); //вызов метода, ввод числа (в ручную)

            //РЕШЕНИЕ ЛОГИЧЕСКИМ МЕТОДОМ БЕЗ ПРИВЯЗКИ К КОНСОЛИ
            // bool Even2 (int z)
            // {
            //     return z % 2 == 0;
            // }
            // bool res = Even2(6);
            // Console.WriteLine(res);
            // //Добавил описание для красоты вывода в терминал:
            // if (res == true) Console.WriteLine("Число четное");
            // else Console.WriteLine("Число нечетное");



//  7. Показать числа от -N до N
    // int Ar (int N)  //задаем метод
    // {
    //     int x= -N;  //первая цифра -N (задаем цикл)
    //     while (x <=N )  //до тех пор пока x меньше или равен N 
    //     {
    //         Console.WriteLine (x);  //выводим в консоль "x"
    //             x++;  //инкремент
    //     }
    //     return x;
    // }
    // Ar (3);  //вызов метода

        // //вариант с помощью цикла "for":
        // int Ar2(int n)
        // {
        //     for (int i = -n; i < n+1; i++) 
        //     {
        //        Console.WriteLine(i); 
        //     }
        //     return n;
        // }
        // int res = Ar2(5);

//Решение от коллег Показать числа от -N до N

// int n = 10;

// int[] CreateArray( int arg)
// {
//     int [] arrayA = new int [arg * 2 + 1];  //+1 для того, чтобы влез 0
//     for(int i = -arg; i <= arg; i++)
//     {
//         arrayA[i + arg] = i;
//     }
//     return arrayA;
// }

// int[] arr =CreateArray(n);

// //for(int count = 0; count < arrayA.Length; count++) Console.Write($"{arrayA[count]} ");
// Console.WriteLine(String.Join(',', arr)); //вывод массива на экран через запятую



//КАК УБРАТЬ КОНСОЛЬ ИЗ ТЕЛА МЕТОДА ВЫШЕ И НИЖЕ (7 и 8 задачи) И СДЕЛАТЬ НОРМАЛЬНЫЙ ВЫЗОВ МЕТОДА - ПОКА НЕ ПОНИМАЮ...        



//  8. Показать четные числа от 1 до N
    //Допущение: начинаем показ от цифры 2 (т.к. 1 - нечетное), добавляя к ней 2 до N раз
    // int Even (int N)
    // {
    //     for (int i = 2; i < N+1; i=i+2)  //цикл от 2 до N+1 (учитываем 0 (то ли массив, то ли ПК считают от него)), плюс 2
    //     {
    //         Console.WriteLine(i);  //вывод на экран результата каждого оборота цикла
    //     } 
    //     return N;  
    // }
    // int res = Even (10);



//  9. Показать последнюю цифру трёхзначного числа
    // int N = Convert.ToInt32(Console.ReadLine()); //позволяет вводить числа
    // int a= N%10;  //показывает последнюю цифру в десятичной системе
    // Console.WriteLine(a);
    //     // Console.ReadLine - считывает строку (string), для чисел требуется конвертация
    //     // Convert.ToInt32 - Преобразует заданное значение в 32-битовое целое число со знаком.
    //     // N%10 - остаток от деления на 10 (в программировании - последняя цифра числа)

        // //ТО ЖЕ, НО МЕТОДОМ И БЕЗ ПРИВЯЗКИ К КОНСОЛИ:
        // int TheLastDigit (int n)
        // {
        //     int x = n%10;  //Показывает отстаток от деления на 10 любого целочисленного числа
        //     return x;
        // }
        // int res = TheLastDigit(-789);
        // Console.WriteLine(res);



// 10. Показать вторую цифру трёхзначного числа
    // int N = Convert.ToInt32(Console.ReadLine());
    // int a= N/10%10;  
    // Console.WriteLine(a);
    // //     // N/10%10 - остаток от деления на 10 деления на 10 (предпоследняя цифра в числе из десятичной СИ)

        // //ТО ЖЕ, НО МЕТОДОМ И БЕЗ ПРИВЯЗКИ К КОНСОЛИ:
        // int TheLastDigit2 (int n)
        // {
        //     int x = n/10%10;  //Показывает отстаток от деления на 10 любого целочисленного числа уже поделенного на 10
        //     return x;
        // }
        // int res = TheLastDigit2(582);
        // Console.WriteLine(res);



// 11. Дано число из отрезка [10, 99]. Показать наибольшую цифру числа
    //Уточнение: дано двузначное число. Решение: по мотивам 9 и 10 задач.
    // int Max2(int x)
    // {
    //     if ((x%10)>(x/10%10)) Console.WriteLine(x%10);
    //     else Console.WriteLine(x/10%10);
    //     return x;
    // }
    // int res = Max2(84);

// //ТО ЖЕ, НО МЕТОДОМ И БЕЗ ПРИВЯЗКИ К КОНСОЛИ:
        // int Max21(int x)
        // {
        //     int a = x%10;
        //     int b = x/10%10;
        //     if (a>b) return a;
        //     else  return b;
        // }
        // int res = Max21(83);
        // Console.WriteLine(res);


//=======================================================
//Задачи выше - решены и переделаны с учетом вывода консоли из тела метода
//Задачи ниже - решены лично или на семинарах (коллективно) но не разобраны повторно
//=======================================================


// 12. Удалить вторую цифру трёхзначного числа
// void Del(int XXX)
// {
//     Console.WriteLine($"{XXX/100%10}{XXX%10}");
// }
// Del(258);



// 13. Выяснить, кратно ли число заданному, если нет, вывести остаток.
    // double remains (double x, double y)
    // {
    //     if (x%y==0) Console.WriteLine($"Число {x} кратное {y}");
    //     else 
    //     {
    //         double z = (x/y)-(x%y);
    //         Console.WriteLine($"Остаток от деления {z}");
    //     }
    //     return (x/y)-(x%y);
    // }
    // double res = remains (5,2);



// 14. Найти третью цифру числа или сообщить, что её нет
//Уточнение: считаю, что третья цифра числа - это разряд сотен.
// int ThirdDigit(int x)
// {
//     int n = x / 100 % 10;
//     if (n == 0) return -1;
//     else return n;
// }
// int res = ThirdDigit(738);
// if (res == -1) Console.WriteLine("числа нет"); else Console.WriteLine(res);



// =======Почувствуй себя джуном========
// 15. Дано число. Проверить кратно ли оно 7 и 23
    // //Моя идея была Буллевым методом определить и распечатать. НЕ ПОЛУЧИЛОСЬ. Вот заготовки:
    // bool multiplicity(double x)
    // {
    //     bool z = (x%7==0 || x%23==0);
    //     if (z == true) 
    //     return Console.WriteLine($"Число {x} кратно 7 и 23");
    //     else 
    //     return Console.WriteLine($"Число {x} не кратно 7 и 23");
    // }
    //         multiplicity(52);
    //         //Еще отрывок подхода
    //         bool check = true;
    //         Console.WriteLine( check ? "Число кратно 7 и 23":"Число не кратно 7 и 23");
    //         Console.WriteLine( false ? "Число не кратно 7 и 23":"Число не кратно 7 и 23");
    // //Основная проблема - нельзя присвоить один тип другому, и вызов функции

// //НО ВИДИМО ЗАПАРИЛСЯ. ПОСМОТРЕЛ РЕШЕНИЕ ДРУГИХ И СДЕЛАЛ ТАК:
// bool multiplicity(double x)
// {   
// bool z = (x%7==0 || x%23==0);
// return z;
// }
// Console.WriteLine (multiplicity(161));

    // //А ВОТ РЕШЕНИЕ КОЛЛЕГ:
    // int func15(int num)
    // {
    //     int res = 0;
    //     if  (num %7 ==0)
    //     {
    //         if (num %23 ==0) 
    //         {       
    //         res = 1;
    //         }
    //     }
    // return res; 
    // }
    // int ans = func15(161);
    // Console.WriteLine(ans);



// 16. Дано число обозначающее день недели. Выяснить является номер дня недели выходным
// int week (int day)
// {
//     if (day == 7 || day == 6)
//     Console.WriteLine("Номер дня недели является выходным");
//     else Console.WriteLine("Номер дня недели не является выходным");
//     return day;
// }
// int res = week (6);



// 17. По двум заданным числам проверять является ли одно квадратом другого
    // bool square (int a, int b)  //Логический метод
    // {
    //     return a == b*b | b == a*a;   //True - если a == b*b или b == a*a, в других случаях - False
    // }
    // Console.WriteLine(square(10,3));  //распечатка, вызов метода с вводом аргументов



// 18. Проверить истинность утверждения ¬(X ⋁ Y) = ¬X ⋀ ¬Y
    //Тут, видимо стоит записать выражение понятными для ПК знаками
    //Использую логический метод, для начала
    // bool Ne(bool x, bool y)
    // {
    //     bool a = !(x | y);
    //     bool b = ! x & ! y;
    //     return a == b;
    // }
    // bool res = Ne(true,false);
    // bool res1 = Ne(true,true);
    // bool res2 = Ne(false,false);
    // bool res3 = Ne(false,true);
    // Console.WriteLine(res);
    // Console.WriteLine(res1);
    // Console.WriteLine(res2);
    // Console.WriteLine(res3);



// 19. Определить номер четверти плоскости, в которой находится точка с координатами Х и У, причем X ≠ 0 и Y ≠ 0
    // //Допущение: "X ≠ 0 и Y ≠ 0" - понимаю как "X и Y вмести и по отдельности ≠ 0"
    // double quarter (double x, double y)
    // {
    //     if (x == 0 | y == 0) return 0;  //Если x или y равны нулю, вернуть ноль (координаты на осях)
    //     if (x > 0 & y > 0) return 1;  // Если x > 0 и y > 0 вернуть 1 (первая четверть)
    //     if (x < 0 & y > 0) return 2;  // Если x < 0 и y > 0 вернуть 2 (вторая четверть)
    //     if (x < 0 & y < 0) return 3;  // Если x < 0 и y < 0 вернуть 3 (третья четверть)
    //     else return 4;  // Иначе (Если x > 0 и y < 0) вернуть 4 (четвертая четверть)
    // }
    // double res = quarter (4.5,-3.8);
    // Console.WriteLine(res);

        // //Тупанул, делал для 20 задачи, но понял, что сделал 19 другим способом:
        // double quarter2 (string[] args)
        // {
        //     Console.WriteLine("Введите x: ");
        //     double x = Convert.ToDouble(Console.ReadLine());
        //         Console.WriteLine("Введите y: ");
        //         double y = Convert.ToDouble(Console.ReadLine());
        //     if (x == 0 | y == 0) return 0;  //Если x или y равны нулю, вернуть ноль (координаты на осях)
        //     if (x > 0 & y > 0) return 1;  // Если x > 0 и y > 0 вернуть 1 (первая четверть)
        //     if (x < 0 & y > 0) return 2;  // Если x < 0 и y > 0 вернуть 2 (вторая четверть)
        //     if (x < 0 & y < 0) return 3;  // Если x < 0 и y < 0 вернуть 3 (третья четверть)
        //     else return 4;  // Иначе (Если x > 0 и y < 0) вернуть 4 (четвертая четверть)
        // }
        // double res = quarter2(args);
        // Console.WriteLine(res);



// 20. Ввести номер четверти, показать диапазоны для возможных координат
    ////Не придумал способа показать диапазоны по другому
    // string quarter2 (string[] args)
    // {
    //     Console.WriteLine("Введите номер четверти: ");  //запрос ввода
    //     int s = Convert.ToInt32(Console.ReadLine());  //Конвертация строки в целое число

    //     if (s == 1) return ("x > 0 & y > 0");  // Если ввели номер "1", диапазон координат может быть "x > 0 и y > 0"
    //     if (s == 2) return ("x < 0 & y > 0");  // Если ввели номер "2", диапазон координат может бытьx "x < 0 и y > 0"
    //     if (s == 3) return ("x < 0 & y < 0");  // Если ввели номер "3", диапазон координат может бытьx "x < 0 и y < 0"
    //     if (s == 4) return ("x > 0 и y < 0");  // Если ввели номер "4", диапазон координат может бытьx "x < 0 и y < 0"
    //     else return "Число не соответствует четверти";  // Если ввели любое другое число
    // }
    // string res = quarter2(args);  //вызов метода
    // Console.WriteLine(res);  //печать метода



// 21. Программа проверяет пятизначное число на палиндромом.
// //==========================================
// //!!!ПОКА ПОНЯЛ КАК ПЕРЕВЕРНУТЬ ЧИСЛО, КАК СРАВНИТЬ - НЕ ПОНЯЛ!!!
// int Q(int x)  //объявлен целочисленный метод с аргументом Х (для переворачивания числа)
// {
//     int a = 0;  //ввожу переменную
//     while (x>0)  //до тех пор пока Х > 0
//     {
//         a = a * 10;  //увеличиваю переменную в разряде (десятки, сотни и т.д)
//                      //чтобы в конце был ноль
//         a = a + x%10;  //прибавляю к А последнюю цифру числа Х (остаток от деления на 10)
//         x/=10;  //делю Х на 10 - остается число без последней цифры
//     }
//     return a;
    
// }
// Console.WriteLine(Q(23432));
// //============================================



// 22. Найти расстояние между точками в пространстве 2D/3D
    //формула для 2D: корень из((x2-x1)^2+(y2-y1)^2)
    //формула для 3D: корень из((x2-x1)^2+(y2-y1)^2+(z2-z1)^2)
    //Корень в C#: Math.Sqrt(Double)
    //Возведение в квадрат в C#: Math.Pow(Double число, Double степень)
// double distance(double x1, double y1, double z1,  //метод и аргументы
//                 double x2, double y2, double z2)
// {
//     double d = Math.Sqrt(Math.Pow((x2-x1),2)+(Math.Pow((y2-y1),2))+(Math.Pow((z2-z1),2)));
//     return d;  //тупо формулу переписал языком C#
// }
// double res = distance(2,3,0,5,6,0);  //ввод координат, если считаем 2D -> z1&z2==0
// Console.WriteLine(res);



// Почувствуй себя мидлом
// 23. Показать таблицу квадратов чисел от 1 до N
    // void Squares(int n)  //по мотивам 3 лекции (for в for)
    // {
    // for (int i = 1; i <= n; i++)  //цикл, выдает числа от 1 до N 
    // {
    //     for (int j = 2; j <=2; j++) //внутри каждого такта добавляет степень к числу из первого for
    //     {
    //         Console.WriteLine($"{i} ^ {j} = {Math.Pow(i,j)}"); //печать каждого такта
    //     }
    // } 
    // }   
    // Squares(7);  //вызов метода, 



// 24. Найти кубы чисел от 1 до N
    // void cube(int n)  //по мотивам 3 лекции (for в for) - хоть и не совсем по условию задания
    // {
    // for (int i = 1; i <= n; i++)  //цикл, выдает числа от 1 до N 
    // {
    //     for (int j = 3; j <=3; j++) //внутри каждого такта добавляет степень к числу из первого for
    //     {
    //         Console.WriteLine($"{i} ^ {j} = {Math.Pow(i,j)}"); //печать каждого такта
    //     }
    // } 
    // }   
    // cube(5);  //вызов метода, 

//ЗДЕСЬ БУДЕТ НОРМАЛЬНЫЙ ВАРИАНТ НА ОСНОВЕ МАССИВА (ТИПА ЗАДАЧИ 33)
//ПОКА НЕ РАБОТАЕТ (ТО ЧТО НИЖЕ, НЕУДАЧНЫЙ НАБРОСОК), ВРЕМЯ НА СЕГОДНЯ ЗАКОНЧИЛОСЬ:       
        // double cube(int n)  
        // {
        // for (int i = 1; i <= n; i++) 
        // {
        //     //double j = 0;
        //     double j = Math.Pow (i,3);
        //     return j;
        // } 
        // int s = j;
        // }   
        // double res = cube(5);  



// 25. Найти сумму чисел от 1 до А
// 26. Возведите число А в натуральную степень B используя цикл
// 27. Определить количество цифр в числе
// 28. Подсчитать сумму цифр в числе
// 29. Написать программу вычисления произведения чисел от 1 до N
// 30. Показать кубы чисел, заканчивающихся на четную цифру

// Почувствуй себя сеньором
// 31. Задать массив из 8 элементов и вывести их на экран 
    // int[] a = { 1, 2, 3, 4, 5, 6, 7, 8 };  //задаем массив (ручками)
    // string A(int[] f)  //метод - печатающий его (превращающий в строку)
    // {
    //     string res = string.Empty;
    //     for (int i = 0; i < a.Length; i++)
    //     {
    //         res += ($"{a[i]} ");
    //     }
    //     return res;
    // }
    // Console.WriteLine(A(a));

        // // метод для создания массива из 8 элементов заполняемых рандомно
        // int[] numbers (int a)
        // {
        //     int [] arr = new int [8];
        //         for (int i = 0; i < arr.Length; i++) 
        //         {
        //             arr [i] = new Random().Next(-5,7);
        //         }
        //     return arr;
        // }

        // string A(int[]a )
        // {
        //     string result = string.Empty;
        //     for (int i = 0; i < a.Length; i++)
        //     {
        //         result += ($"{a[i]} ");
        //     }
        //     return result;
        // }
        // Console.WriteLine(A(numbers(8)));


// 32. Задать массив из 8 элементов, заполненных нулями и единицами вывести их на экран 
    //int[]b = {1,2,3,4,5,6,7,8};

    // int[] numbers (int a) //метод (массива?)
    // {
    //     int [] arr = new int [a]; //задаем массив
    //         for (int i = 0; i < arr.Length; i++) //задаем цикл
    //         {
    //             arr [i] = new Random().Next(0,2); //чем наполняем массив (случайные цифры из указанного промежутка)
    //         }
    //     return arr; //возвращаем массив
    // }
    // Если этот метод вызвать на печать, "Console.WriteLine(numbers(8))"; то получится: "System.Int32[]"

    //string A(int[]a ) //этот метод превращает массив в строку (для печати видимо)
    // {
    //     string result = string.Empty;
    //     for (int i = 0; i < a.Length; i++)
    //     {
    //         result += ($"{a[i]} ");
    //     }
    //     return result;
    // }
    // Console.WriteLine(A(numbers(8)));



// 33. Задать массив из 12 элементов, заполненных числами из [-9,9]. Найти сумму положительных/отрицательных элементов массива
    // int[] numbers (int a) //метод (массива?)
    // {
    //     int [] arr = new int [a]; //задаем массив
    //         for (int i = 0; i < arr.Length; i++) //задаем цикл
    //         {
    //             arr [i] = new Random().Next(-9,10); //чем наполняем массив (случайные цифры из указанного промежутка)
    //         }
    //     return arr; //возвращаем массив
    // }

    // string A(int[]a ) //этот метод превращает массив в строку (для печати видимо)
    // {
    //     string result = string.Empty;
    //     for (int i = 0; i < a.Length; i++)
    //     {
    //         result += ($"{a[i]} ");
    //     }
    //     return result;
    // }
    // Console.WriteLine(A(numbers(12)));
// С СУММОЙ ПОКА НЕ РАЗОБРАЛСЯ. НО ДУМАЮ ТУТ БУДЕТ ДВА ЦИКЛА ПО ОТБОРУ И СУММИРОВАНИЮ ОТРИЦАТЕЛЬНЫХ И ПОЛОЖИТЕЛЬНЫХ ЧИСЕЛ
//С ПОСЛЕДУЮЩИМ ВЫВОДОМ В ТЕРМИНАЛ

//Вариант коллег:
// 33. Задать массив из 12 элементов, заполненных числами из [0,9]. Найти сумму положительных/отрицательных элементов массива

// int [] CreateArray(int arg, int arg1, int arg2) //кол-во элементов, нач эл-т, конечный элемент массива
//     { //создание массива из "случайных" чисел из заданного диапазона (все тело)
//         int [] array = new int [arg];
//         for( int i = 0; i <array.Length; i++) array[i] = new Random().Next(arg1,arg2);
//         return array;
//     }

// int Summ(int [] Array)  //метод находит сумму элементов массива
// {
//     int sum = 0;  //новая переменная
//     for( int i = 0; i <Array.Length; i++) sum += Array[i]; //sum = sum + Arrai[i]   //сумма от i до ...
//     return sum;
// }

// Console.WriteLine(Summ(CreateArray(12, 0, 9)));  //печать вызова суммы от заданного массива




// 34. Написать программу замену элементов массива на противоположные




// 35. Определить, присутствует ли в заданном массиве, некоторое число 




// 36. Задать массив, заполнить случайными положительными трёхзначными числами. Показать количество нечетных\четных чисел

//От коллег

// int [] CreateArray()
//     {
//         int [] array = new int [15];
//         for( int i = 0; i <array.Length; i++) array[i] = new Random().Next(100,1000);
//         return array;
//     }
//     int []RandomArray = CreateArray();

// Console.WriteLine(String.Join(',',RandomArray));

// (int a, int b) FindEvenOdd( int [] array)
// {
//     int even = 0;
//     int odd = 0;
//     for (int j = 0; j < array.Length; j++)
//     {
//         if(array[j]%2!=0) odd+=1;
//         else even +=1;
//     }
//     return (odd,even);
// }
// Console.WriteLine(FindEvenOdd(RandomArray));




// 37. В одномерном массиве из 123 чисел найти количество элементов из отрезка [10,99]
//от коллег:
// int [] CreateArray(int arg, int arg1, int arg2)
//     {
//         int [] array = new int [arg];
//         for( int i = 0; i <array.Length; i++) array[i] = new Random().Next(arg1,arg2);
//         return array;
//     }

// int[] RandomArray = CreateArray(12, -1000, 1000);
// Console.WriteLine(String.Join(',',RandomArray));

// int Find(int[] mass)
// {
//     int sum=0;
//     for( int j = 0; j < mass.Length; j++) 
//         if (mass[j] > 9 && mass[j] < 99) sum +=1;
//     return sum;
// }

// Console.WriteLine(Find(RandomArray));




// 38. Найти сумму чисел одномерного массива стоящих на нечетной позиции
//от коллег
// int[] CreateArray(int arg, int arg1, int arg2)
// {
//     int[] array = new int[arg];
//     for (int i = 0; i < array.Length; i++) array[i] = new Random().Next(arg1, arg2);
//     return array;
// }

// int[] RandomArray = CreateArray(12, 1, 10);
// Console.WriteLine(String.Join(',', RandomArray));

// int SummOddPosition(int[] mass)
// {
//     int sum = 0;
//     for (int j = 0; j < mass.Length; j++) if (j % 2 != 0) sum += mass[j]; 
//     return sum;
// }

// Console.WriteLine(SummOddPosition(RandomArray));




// 39. Найти произведение пар чисел в одномерном массиве. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
//от коллег (пока не рабочий)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    // int[] CreateArray(int arg, int arg1, int arg2)
    // {
    //     int[] array = new int[arg];
    //     for (int i = 0; i < array.Length; i++) array[i] = new Random().Next(arg1, arg2);
    //     return array;
    // }

    // int[] RandomArray = CreateArray(12, 1, 10);
    // Console.WriteLine(String.Join(',', RandomArray));

    // int SummOddPosition(int[] mass)
    // {
    //     int work = 0;
    //     int len = mass.Length;
    //     for (int j = 0; j < mass.Length/2; j++)
    //         work = mass[j] * mass[len];
    //         len -=1;
    //     return work;
    // }

    // Console.WriteLine(SummOddPosition(RandomArray));




// 40. В Указанном массиве вещественных чисел найдите разницу между максимальным и минимальным элементом





// Почувствуй себя лидом
// 41. Выяснить являются ли три числа сторонами треугольника 
// 42. Определить сколько чисел больше 0 введено с клавиатуры
// 43. Написать программу преобразования десятичного числа в двоичное
// 44. Найти точку пересечения двух прямых заданных уравнением y=kx+b, а1 k1 и а2 и k2 заданы
// 45. Показать числа Фибоначчи
// 46. Написать программу масштабирования фигуры
// 47. Написать программу копирования массива




// ОДИН МЕТОД ОТ РУСТЕМА (НА ВСЯКИЙ СЛУЧАЙ СЛЯМЗИЛ):
// double UserDouble() //Метод ожидающий ввода вещественного числа и осуществляющий проверку ввода
// {
//     double Number = 0; //переменная Number, хранит вещественное число, которе вводит пользователь
//     while (true)
//     {
//         Console.WriteLine("Введите вещественное значение");
//         if (double.TryParse((Console.ReadLine()), out double number)) //извлекаем из строки ввода символы и пытаемся присвоить им вещественный тип числа
//         {
//             Number = number;  //если получилось, запоминаем число
//             Console.Clear();
//             break;          //очищаем экран и выходим из цикла
//         }
//         else
//         {
//             Console.WriteLine("Не удалось распознать число, попробуйте еще раз."); //если не получилось, запрашиваем по новой
//         }
//     }
//     return Number;        // возвращаем значение метода (функции) в программу
// }





